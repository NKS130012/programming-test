

// JavaScript program to find the maximum
// score after given operations

// Function to calculate
// maximum score recursively
function maxScore(l, r, prefix_sum, num)
{

	// Base case
	if (l > r)
		return 0;

	// Sum of array in range (l, r)
	let current_sum
		= prefix_sum[r]
		- (l - 1 >= 0
				? prefix_sum[l - 1]
				: 0);

	// If the operation is even-numbered
	// the score is decremented
	if (num % 2 == 0)
		current_sum *= -1;

	// Exploring all paths, by removing
	// leftmost and rightmost element
	// and selecting the maximum value
	return current_sum
		+ Math.max(
				maxScore(
					l + 1, r,
					prefix_sum,
					num + 1),
				maxScore(
					l, r - 1,
					prefix_sum,
					num + 1));
}

// Function to find the max score
function findMaxScore(a, n)
{
	// Prefix sum array
	let prefix_sum = new Uint8Array(n);

	prefix_sum[0] = a[0];

	// Calculating prefix_sum
	for (let i = 1; i < n; i++) {
		prefix_sum[i]
			= prefix_sum[i - 1] + a[i];
	}

	return maxScore(0, n - 1,
				
